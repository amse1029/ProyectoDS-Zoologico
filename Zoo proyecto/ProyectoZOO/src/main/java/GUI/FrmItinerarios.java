/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Dominio.Dias;
import Dominio.Horario;
import Dominio.Itinerario;
import Dominio.Recorrido;
import Dominio.Zona;
import itson.Control.FabricaLogica;
import itson.Control.ILogica;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alexa
 */
public class FrmItinerarios extends javax.swing.JFrame {

    /**
     * Creates new form FrmItinerarios
     */
    ILogica ctrlItinerario;
    Object[] datos;
    Recorrido recorrido;
    Itinerario itinerario;
    public FrmItinerarios(Object[] datos) {
        this.datos=datos;
        initComponents();
        ctrlItinerario=FabricaLogica.crearInstancia();
        this.despliegaDatos(datos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFondo = new javax.swing.JPanel();
        pnlRegistro = new javax.swing.JPanel();
        lblRegistro = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        lblNombreCientifico = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblDescripcion = new javax.swing.JLabel();
        txtDuracion = new javax.swing.JTextField();
        Horarios = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        lblDescripcion2 = new javax.swing.JLabel();
        Horarios1 = new javax.swing.JLabel();
        txtLongitud = new javax.swing.JTextField();
        txtVisitantes = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHorarios = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblZonas = new javax.swing.JTable();
        btnRegresar = new javax.swing.JButton();
        txtNombreRecorrido = new javax.swing.JTextField();
        lblNombre1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registrar itinerario");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlFondo.setBackground(new java.awt.Color(238, 189, 102));
        pnlFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlRegistro.setBackground(new java.awt.Color(106, 69, 4));
        pnlRegistro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblRegistro.setFont(new java.awt.Font("Segoe Print", 1, 30)); // NOI18N
        lblRegistro.setForeground(new java.awt.Color(255, 255, 255));
        lblRegistro.setText("Registrar itinerario");
        pnlRegistro.add(lblRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        pnlFondo.add(pnlRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 70));

        btnBuscar.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 20)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(106, 69, 4));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        pnlFondo.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, -1, -1));

        lblNombreCientifico.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        lblNombreCientifico.setForeground(new java.awt.Color(255, 255, 255));
        lblNombreCientifico.setText("Duraci√≥n:");
        pnlFondo.add(lblNombreCientifico, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        lblNombre.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(255, 255, 255));
        lblNombre.setText("Nombre Recorrido:");
        pnlFondo.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 220, -1));

        lblDescripcion.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        lblDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        lblDescripcion.setText("Longitud:");
        pnlFondo.add(lblDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        txtDuracion.setEditable(false);
        txtDuracion.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        pnlFondo.add(txtDuracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, 170, 40));

        Horarios.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        Horarios.setForeground(new java.awt.Color(255, 255, 255));
        Horarios.setText("Zonas:");
        pnlFondo.add(Horarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 340, -1, -1));

        btnGuardar.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 20)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(106, 69, 4));
        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        pnlFondo.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 540, -1, -1));

        lblDescripcion2.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        lblDescripcion2.setForeground(new java.awt.Color(255, 255, 255));
        lblDescripcion2.setText("Visitantes:");
        pnlFondo.add(lblDescripcion2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, -1, -1));

        Horarios1.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        Horarios1.setForeground(new java.awt.Color(255, 255, 255));
        Horarios1.setText("Horarios:");
        pnlFondo.add(Horarios1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, -1, -1));

        txtLongitud.setEditable(false);
        txtLongitud.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        pnlFondo.add(txtLongitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, 170, 40));

        txtVisitantes.setEditable(false);
        txtVisitantes.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        pnlFondo.add(txtVisitantes, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 290, 170, 40));

        txtNombre.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        pnlFondo.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 170, 40));

        tblHorarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dia", "Incluido?", "Horas de inicio:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHorarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHorariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHorarios);

        pnlFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 220, 140));

        tblZonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Elegida?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblZonas);

        pnlFondo.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 380, 180, 140));

        btnRegresar.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 20)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(106, 69, 4));
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        pnlFondo.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 540, -1, -1));

        txtNombreRecorrido.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        pnlFondo.add(txtNombreRecorrido, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 170, 40));

        lblNombre1.setFont(new java.awt.Font("Segoe Print", 1, 22)); // NOI18N
        lblNombre1.setForeground(new java.awt.Color(255, 255, 255));
        lblNombre1.setText("Nombre:");
        pnlFondo.add(lblNombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        getContentPane().add(pnlFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        this.seleccionaBuscar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        this.seleccionaGuardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tblHorariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHorariosMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tblHorariosMouseClicked

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        FrmInicial principal=new FrmInicial();
        this.setVisible(false);
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void despliegaDatos(Object[] datos) {
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblHorarios.getModel();
        Object[] lunes = {"Lunes", false};
        modeloTabla.addRow(lunes);
        Object[] martes={"Martes", false};
        modeloTabla.addRow(martes);
        Object[] miercoles = {"Miercoles", false};
        modeloTabla.addRow(miercoles);
        Object[] jueves={"Jueves", false};
        modeloTabla.addRow(jueves);
        Object[] viernes = {"Viernes", false};
        modeloTabla.addRow(viernes);
        Object[] sabado={"Sabado", false};
        modeloTabla.addRow(sabado);
        Object[] domingo={"Domingo", false};
        modeloTabla.addRow(domingo);
    }
    
    private void seleccionaBuscar() {
        String nombre=this.txtNombre.getText();
        String nombreRecorrido = this.txtNombreRecorrido.getText();
        itinerario=ctrlItinerario.buscarItinerario(nombre);
        recorrido = ctrlItinerario.buscarRecorrido(nombreRecorrido);
        System.out.println(recorrido);
        if(itinerario==null){
            this.muestraMsjNoItinerario();
            itinerario = new Itinerario();
            if(recorrido==null){
                recorrido = new Recorrido();
                this.muestraCajasVerificacion();
            }else{
                this.despliegaDatosRecorrido(recorrido);
            }
        }else{
           this.despliegaDatosItinerario(itinerario);
           if(recorrido==null){
                recorrido = new Recorrido();
                this.muestraCajasVerificacion();
            }else{
                this.despliegaDatosRecorrido(recorrido);
            }
        }
         this.activaCamposRegistro();
    }
    
    public void activaCamposRegistro(){
        this.txtDuracion.setEditable(true);
        this.txtLongitud.setEditable(true);
        this.txtVisitantes.setEditable(true);
        this.btnGuardar.setEnabled(true);
    }
    
    private void despliegaDatosRecorrido(Recorrido recorrido){
        Float duracion=recorrido.getDuracion();
        Float longitud=recorrido.getLongitud();
        List<Zona> zonaitinerario=recorrido.getZonas();
        List<Zona> zonas=(List<Zona>) datos[0];
        DefaultTableModel modeloTabla2 = (DefaultTableModel) this.tblZonas.getModel();
        for (int i = 0; i < zonas.size(); i++) {
            if(zonaitinerario.contains(zonas.get(i))){
                Object[] infor = {zonas.get(i).getNombre(), true};
                modeloTabla2.addRow(infor);
            }else{
                Object[] infor = {zonas.get(i).getNombre(), false};
                modeloTabla2.addRow(infor);
            }
        }
        this.txtDuracion.setText(duracion.toString());
        this.txtLongitud.setText(longitud.toString());
    }
    
    private void despliegaDatosItinerario(Itinerario itinerario) {
        Integer visitantes=itinerario.getMaxVisitantes();
        Recorrido recorrido = itinerario.getRecorrido();
        List<Horario> horarios=itinerario.getHorarios();
        
        
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblHorarios.getModel();
        for (int i = 0; i < horarios.size(); i++) {
            if(horarios.get(i).getDia().equals(Dias.Lunes)){
                this.tblHorarios.setValueAt(true, 0, 1);
                this.tblHorarios.setValueAt(horarios.get(i).getHora(), 0, 2);
            }
            if(horarios.get(i).getDia().equals(Dias.Martes)){
                this.tblHorarios.setValueAt(true, 1, 1);
                this.tblHorarios.setValueAt(horarios.get(i).getHora(), 1, 2);
            }
            if(horarios.get(i).getDia().equals(Dias.Miercoles)){
                this.tblHorarios.setValueAt(true, 2, 1);
                this.tblHorarios.setValueAt(horarios.get(i).getHora(), 2, 2);
            }
            if(horarios.get(i).getDia().equals(Dias.Jueves)){
                this.tblHorarios.setValueAt(true, 3, 1);
                this.tblHorarios.setValueAt(horarios.get(i).getHora(), 3, 2);
            }
            if(horarios.get(i).getDia().equals(Dias.Viernes)){
                this.tblHorarios.setValueAt(true, 4, 1);
                this.tblHorarios.setValueAt(horarios.get(i).getHora(), 4, 2);
            }
            if(horarios.get(i).getDia().equals(Dias.Sabado)){
                this.tblHorarios.setValueAt(true, 5, 1);
                this.tblHorarios.setValueAt(horarios.get(i).getHora(), 5, 2);
            }
            if(horarios.get(i).getDia().equals(Dias.Domingo)){
                this.tblHorarios.setValueAt(true, 6, 1);
                this.tblHorarios.setValueAt(horarios.get(i).getHora(), 6, 2);
            }
        }
        
        this.txtVisitantes.setText(visitantes.toString());
        
    }
    
    private void muestraMsjNoItinerario() {
        JOptionPane.showMessageDialog(this, "No existe itinerario", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void muestraCajasVerificacion() {
        List<Zona> zonas=(List<Zona>) datos[0];
        DefaultTableModel modeloTabla2 = (DefaultTableModel) this.tblZonas.getModel();
        for (int i = 0; i < zonas.size(); i++) {
            Object[] infor = {zonas.get(i).getNombre(), false};
            modeloTabla2.addRow(infor);
        }
    }
    
    private void seleccionaDia() {
        
    }
    
    private void muestraEspacioHoras() {
        
    }
    
    private void seleccionaGuardar() {
        String nombre=this.txtNombre.getText();
        float duracion=Float.parseFloat(this.txtDuracion.getText());
        float longitud=Float.parseFloat(this.txtLongitud.getText());
        int visitantes=Integer.parseInt(this.txtVisitantes.getText());
        List<Horario> horarios=new ArrayList<>();
        if((boolean)this.tblHorarios.getValueAt(0, 1)){
            Horario horario = new Horario();
            horario.setDia(Dias.Lunes);
            horario.setHora(this.tblHorarios.getValueAt(0, 2).toString());
            horarios.add(horario);
        }
        if((boolean)this.tblHorarios.getValueAt(1, 1)){
            Horario horario = new Horario();
            horario.setDia(Dias.Martes);
            horario.setHora(this.tblHorarios.getValueAt(1, 2).toString());
            horarios.add(horario);
        }
        if((boolean)this.tblHorarios.getValueAt(2, 1)){
            Horario horario = new Horario();
            horario.setDia(Dias.Miercoles);
            horario.setHora(this.tblHorarios.getValueAt(2, 2).toString());
            horarios.add(horario);
        }
        if((boolean)this.tblHorarios.getValueAt(3, 1)){
            Horario horario = new Horario();
            horario.setDia(Dias.Jueves);
            horario.setHora(this.tblHorarios.getValueAt(3, 2).toString());
            horarios.add(horario);
        }
        if((boolean)this.tblHorarios.getValueAt(4, 1)){
            Horario horario = new Horario();
            horario.setDia(Dias.Viernes);
            horario.setHora(this.tblHorarios.getValueAt(4, 2).toString());
            horarios.add(horario);
        }
        if((boolean)this.tblHorarios.getValueAt(5, 1)){
            Horario horario = new Horario();
            horario.setDia(Dias.Sabado);
            horario.setHora(this.tblHorarios.getValueAt(5, 2).toString());
            horarios.add(horario);
        }
        if((boolean)this.tblHorarios.getValueAt(6, 1)){
            Horario horario = new Horario();
            horario.setDia(Dias.Domingo);
            horario.setHora(this.tblHorarios.getValueAt(6, 2).toString());
            horarios.add(horario);
        }
        List<Zona> zonas=new ArrayList<>();
        List<Zona> todas=(List<Zona>) datos[0];
        for(int i=0;i<this.tblZonas.getRowCount();i++){
            if((boolean)this.tblZonas.getValueAt(i, 1)){
                zonas.add(todas.get(i));
            }
        }
        //Itinerario itinerario=new Itinerario();
        //Recorrido recorrido=new Recorrido();
        itinerario.setNombreItinerario(nombre);
        recorrido.setDuracion(duracion);
        itinerario.setMaxVisitantes(visitantes);
        itinerario.setHorarios(horarios);
        recorrido.setLongitud(longitud);
        recorrido.setNombre(this.txtNombreRecorrido.getText());
        recorrido.setZonas(zonas);
        boolean exito=itinerario.verificacion(nombre,visitantes, horarios);
        Itinerario itinerarioAux = ctrlItinerario.buscarItinerario(nombre);
        if(itinerarioAux==null){
            ctrlItinerario.guardarItinerario(itinerario,recorrido);
            this.muestraMsjExito();
        }else{
            this.muestraMsjError();
        }
    }
    
    private void muestraMsjError() {
       JOptionPane.showMessageDialog(this, "Error", "Error", JOptionPane.ERROR_MESSAGE); 
    }
    
    private void muestraMsjExito() {
        JOptionPane.showMessageDialog(this, "Itinerario registrado con √©xito", "√âxito", JOptionPane.INFORMATION_MESSAGE);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Horarios;
    private javax.swing.JLabel Horarios1;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblDescripcion2;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombre1;
    private javax.swing.JLabel lblNombreCientifico;
    private javax.swing.JLabel lblRegistro;
    private javax.swing.JPanel pnlFondo;
    private javax.swing.JPanel pnlRegistro;
    private javax.swing.JTable tblHorarios;
    private javax.swing.JTable tblZonas;
    private javax.swing.JTextField txtDuracion;
    private javax.swing.JTextField txtLongitud;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreRecorrido;
    private javax.swing.JTextField txtVisitantes;
    // End of variables declaration//GEN-END:variables
}
